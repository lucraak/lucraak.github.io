{
  "version": 3,
  "sources": ["../../shikiji/dist/langs/rst.mjs"],
  "sourcesContent": ["import cpp from './cpp.mjs';\nimport python from './python.mjs';\nimport javascript from './javascript.mjs';\nimport shellscript from './shellscript.mjs';\nimport yaml from './yaml.mjs';\nimport cmake from './cmake.mjs';\nimport ruby from './ruby.mjs';\nimport './glsl.mjs';\nimport './c.mjs';\nimport './sql.mjs';\nimport './html.mjs';\nimport './css.mjs';\nimport './xml.mjs';\nimport './java.mjs';\nimport './lua.mjs';\n\nconst lang = Object.freeze({ \"information_for_contributors\": [\"This file has been converted from https://github.com/trond-snekvik/vscode-rst/blob/master/syntaxes/rst.tmLanguage.json\", \"If you want to provide a fix or improvement, please create a pull request against the original repository.\", \"Once accepted there, we are happy to receive an update request.\"], \"version\": \"https://github.com/trond-snekvik/vscode-rst/commit/7f2d6bb4e20642b60f2979afcb594cfe4b48117a\", \"scopeName\": \"source.rst\", \"patterns\": [{ \"include\": \"#body\" }], \"repository\": { \"body\": { \"patterns\": [{ \"include\": \"#title\" }, { \"include\": \"#inline-markup\" }, { \"include\": \"#anchor\" }, { \"include\": \"#line-block\" }, { \"include\": \"#replace-include\" }, { \"include\": \"#footnote\" }, { \"include\": \"#substitution\" }, { \"include\": \"#blocks\" }, { \"include\": \"#table\" }, { \"include\": \"#simple-table\" }, { \"include\": \"#options-list\" }] }, \"title\": { \"match\": \"^(\\\\*{3,}|#{3,}|\\\\={3,}|~{3,}|\\\\+{3,}|-{3,}|`{3,}|\\\\^{3,}|:{3,}|\\\"{3,}|_{3,}|'{3,})$\", \"name\": \"markup.heading\" }, \"inline-markup\": { \"patterns\": [{ \"include\": \"#escaped\" }, { \"include\": \"#ignore\" }, { \"include\": \"#ref\" }, { \"include\": \"#literal\" }, { \"include\": \"#monospaced\" }, { \"include\": \"#citation\" }, { \"include\": \"#bold\" }, { \"include\": \"#italic\" }, { \"include\": \"#list\" }, { \"include\": \"#macro\" }, { \"include\": \"#reference\" }, { \"include\": \"#footnote-ref\" }] }, \"ignore\": { \"patterns\": [{ \"match\": \"'[`*]+'\" }, { \"match\": \"<[`*]+>\" }, { \"match\": \"{[`*]+}\" }, { \"match\": \"\\\\([`*]+\\\\)\" }, { \"match\": \"\\\\[[`*]+\\\\]\" }, { \"match\": '\"[`*]+\"' }] }, \"table\": { \"begin\": \"^\\\\s*\\\\+[=+-]+\\\\+\\\\s*$\", \"end\": \"^(?![+|])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.table\" } }, \"patterns\": [{ \"match\": \"[=+|-]\", \"name\": \"keyword.control.table\" }] }, \"simple-table\": { \"match\": \"^[=\\\\s]+$\", \"name\": \"keyword.control.table\" }, \"ref\": { \"begin\": \"(:ref:)`\", \"end\": \"`|^\\\\s*$\", \"name\": \"entity.name.tag\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"match\": \"<.*?>\", \"name\": \"markup.underline.link\" }] }, \"reference\": { \"match\": \"[\\\\w-]*[a-zA-Z\\\\d-]__?\\\\b\", \"name\": \"entity.name.tag\" }, \"macro\": { \"match\": \"\\\\|[^\\\\|]+\\\\|\", \"name\": \"entity.name.tag\" }, \"literal\": { \"match\": \"(:\\\\S+:)(`.*?`\\\\\\\\?)\", \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"entity.name.tag\" } } }, \"monospaced\": { \"begin\": \"(?<=[\\\\s\\\"'(\\\\[{<]|^)``[^\\\\s`]\", \"end\": \"``|^\\\\s*$\", \"name\": \"string.interpolated\" }, \"citation\": { \"begin\": \"(?<=[\\\\s\\\"'(\\\\[{<]|^)`[^\\\\s`]\", \"end\": \"`_{,2}|^\\\\s*$\", \"name\": \"entity.name.tag\", \"applyEndPatternLast\": 0 }, \"bold\": { \"begin\": `(?<=[\\\\s\"'(\\\\[{<]|^)\\\\*{2}[^\\\\s*]`, \"end\": \"\\\\*{2}|^\\\\s*$\", \"name\": \"markup.bold\" }, \"italic\": { \"begin\": `(?<=[\\\\s\"'(\\\\[{<]|^)\\\\*[^\\\\s*]`, \"end\": \"\\\\*|^\\\\s*$\", \"name\": \"markup.italic\" }, \"escaped\": { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape\" }, \"list\": { \"match\": \"^\\\\s*(\\\\d+\\\\.|\\\\* -|[a-zA-Z#]\\\\.|[iIvVxXmMcC]+\\\\.|\\\\(\\\\d+\\\\)|\\\\d+\\\\)|[*+-])\\\\s+\", \"name\": \"keyword.control\" }, \"line-block\": { \"match\": \"^\\\\|\\\\s+\", \"name\": \"keyword.control\" }, \"raw-html\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+raw\\\\s*::)\\\\s+(html)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"name\": \"variable.parameter.html\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"text.html.derivative\" }] }, \"anchor\": { \"match\": \"^\\\\.{2}\\\\s+(_[^:]+:)\\\\s*\", \"name\": \"entity.name.tag.anchor\" }, \"replace-include\": { \"match\": \"^\\\\s*(\\\\.{2})\\\\s+(\\\\|[^\\\\|]+\\\\|)\\\\s+(replace::)\", \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"entity.name.tag\" }, \"3\": { \"name\": \"keyword.control\" } } }, \"footnote\": { \"match\": \"^\\\\s*\\\\.{2}\\\\s+\\\\[(?:[\\\\w\\\\.-]+|[#*]|#\\\\w+)\\\\]\\\\s+\", \"name\": \"entity.name.tag\" }, \"footnote-ref\": { \"match\": \"\\\\[(?:[\\\\w\\\\.-]+|[#*])\\\\]_\", \"name\": \"entity.name.tag\" }, \"substitution\": { \"match\": \"^\\\\.{2}\\\\s*\\\\|([^|]+)\\\\|\", \"name\": \"entity.name.tag\" }, \"options-list\": { \"match\": \"(?:(?:^|,\\\\s+)(?:[-+]\\\\w|--?[a-zA-Z][\\\\w-]+|/\\\\w+)(?:[ =](?:\\\\w+|<[^<>]+?>))?)+(?=  |\\\\t|$)\", \"name\": \"variable.parameter\" }, \"blocks\": { \"patterns\": [{ \"include\": \"#domains\" }, { \"include\": \"#doctest\" }, { \"include\": \"#code-block-cpp\" }, { \"include\": \"#code-block-py\" }, { \"include\": \"#code-block-console\" }, { \"include\": \"#code-block-javascript\" }, { \"include\": \"#code-block-yaml\" }, { \"include\": \"#code-block-cmake\" }, { \"include\": \"#code-block-kconfig\" }, { \"include\": \"#code-block-ruby\" }, { \"include\": \"#code-block-dts\" }, { \"include\": \"#code-block\" }, { \"include\": \"#doctest-block\" }, { \"include\": \"#raw-html\" }, { \"include\": \"#block\" }, { \"include\": \"#literal-block\" }, { \"include\": \"#block-comment\" }] }, \"block-comment\": { \"begin\": \"^(\\\\s*)\\\\.{2}(\\\\s+|$)\", \"end\": \"^(?=\\\\S)|^\\\\s*$\", \"name\": \"comment.block\", \"patterns\": [{ \"begin\": \"^\\\\s{3,}(?=\\\\S)\", \"while\": \"^\\\\s{3}.*|^\\\\s*$\", \"name\": \"comment.block\" }] }, \"literal-block\": { \"begin\": \"^(\\\\s*)(.*)(::)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"patterns\": [{ \"include\": \"#inline-markup\" }] }, \"3\": { \"name\": \"keyword.control\" } } }, \"block\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+\\\\S+::)(.*)\", \"end\": \"^(?!\\\\1\\\\s|\\\\s*$)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"name\": \"variable\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"block-param\": { \"patterns\": [{ \"match\": \"(:param\\\\s+(.+?):)(?:\\\\s|$)\", \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"variable.parameter\" } } }, { \"match\": \"(:.+?:)(?:$|\\\\s+(.*))\", \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"patterns\": [{ \"match\": \"\\\\b(0x[a-fA-F\\\\d]+|\\\\d+)\\\\b\", \"name\": \"constant.numeric\" }, { \"include\": \"#inline-markup\" }] } } }] }, \"domains\": { \"patterns\": [{ \"include\": \"#domain-cpp\" }, { \"include\": \"#domain-py\" }, { \"include\": \"#domain-auto\" }, { \"include\": \"#domain-js\" }] }, \"domain-cpp\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(?:cpp|c):(?:class|struct|function|member|var|type|enum|enum-struct|enum-class|enumerator|union|concept)::)\\\\s*(?:(@\\\\w+)|(.*))\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"name\": \"entity.name.tag\" }, \"4\": { \"patterns\": [{ \"include\": \"source.cpp\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"domain-py\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+py:(?:module|function|data|exception|class|attribute|property|method|staticmethod|classmethod|decorator|decoratormethod)::)\\\\s*(.*)\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"patterns\": [{ \"include\": \"source.python\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"domain-auto\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+auto(?:class|module|exception|function|decorator|data|method|attribute|property)::)\\\\s*(.*)\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control.py\" }, \"3\": { \"patterns\": [{ \"include\": \"source.python\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"domain-js\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+js:\\\\w+::)\\\\s*(.*)\", \"end\": \"^(?!\\\\1[ \\\\t]|$)\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"3\": { \"patterns\": [{ \"include\": \"source.js\" }] } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"#body\" }] }, \"doctest\": { \"begin\": \"^(>>>)\\\\s*(.*)\", \"end\": \"^\\\\s*$\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"patterns\": [{ \"include\": \"source.python\" }] } } }, \"code-block-cpp\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(c|c\\\\+\\\\+|cpp|C|C\\\\+\\\\+|CPP|Cpp)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.cpp\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.cpp\" }] }, \"code-block-console\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(console|shell|bash)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.console\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.shell\" }] }, \"code-block-py\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(python)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.py\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.python\" }] }, \"code-block-javascript\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(javascript)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.js\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.js\" }] }, \"code-block-yaml\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(ya?ml)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.yaml\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.yaml\" }] }, \"code-block-cmake\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(cmake)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.cmake\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.cmake\" }] }, \"code-block-kconfig\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*([kK]config)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.kconfig\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.kconfig\" }] }, \"code-block-ruby\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(ruby)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.ruby\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.ruby\" }] }, \"code-block-dts\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\\\\s*(dts|DTS|devicetree)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" }, \"4\": { \"name\": \"variable.parameter.codeblock.dts\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.dts\" }] }, \"code-block\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+(code|code-block)::)\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#block-param\" }] }, \"doctest-block\": { \"begin\": \"^(\\\\s*)(\\\\.{2}\\\\s+doctest::)\\\\s*$\", \"while\": \"^\\\\1(?=\\\\s)|^\\\\s*$\", \"beginCaptures\": { \"2\": { \"name\": \"keyword.control\" } }, \"patterns\": [{ \"include\": \"#block-param\" }, { \"include\": \"source.python\" }] } }, \"name\": \"rst\", \"displayName\": \"reStructuredText\", \"embeddedLangs\": [\"cpp\", \"python\", \"javascript\", \"shellscript\", \"yaml\", \"cmake\", \"ruby\"] });\nvar rst = [\n  ...cpp,\n  ...python,\n  ...javascript,\n  ...shellscript,\n  ...yaml,\n  ...cmake,\n  ...ruby,\n  lang\n];\n\nexport { rst as default };\n"],
  "mappings": "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",
  "names": []
}
