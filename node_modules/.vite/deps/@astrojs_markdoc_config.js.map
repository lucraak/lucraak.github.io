{
  "version": 3,
  "sources": ["../../@astrojs/internal-helpers/dist/path.js", "../../@astrojs/markdoc/dist/runtime.js", "../../@astrojs/markdoc/dist/utils.js", "../../@astrojs/markdoc/dist/heading-ids.js", "../../@astrojs/markdoc/dist/config.js"],
  "sourcesContent": ["function appendExtension(path, extension) {\n  return path + \".\" + extension;\n}\nfunction appendForwardSlash(path) {\n  return path.endsWith(\"/\") ? path : path + \"/\";\n}\nfunction prependForwardSlash(path) {\n  return path[0] === \"/\" ? path : \"/\" + path;\n}\nfunction collapseDuplicateSlashes(path) {\n  return path.replace(/(?<!:)\\/\\/+/g, \"/\");\n}\nfunction removeTrailingForwardSlash(path) {\n  return path.endsWith(\"/\") ? path.slice(0, path.length - 1) : path;\n}\nfunction removeLeadingForwardSlash(path) {\n  return path.startsWith(\"/\") ? path.substring(1) : path;\n}\nfunction removeLeadingForwardSlashWindows(path) {\n  return path.startsWith(\"/\") && path[2] === \":\" ? path.substring(1) : path;\n}\nfunction trimSlashes(path) {\n  return path.replace(/^\\/|\\/$/g, \"\");\n}\nfunction startsWithForwardSlash(path) {\n  return path[0] === \"/\";\n}\nfunction startsWithDotDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  const c3 = path[2];\n  return c1 === \".\" && c2 === \".\" && c3 === \"/\";\n}\nfunction startsWithDotSlash(path) {\n  const c1 = path[0];\n  const c2 = path[1];\n  return c1 === \".\" && c2 === \"/\";\n}\nfunction isRelativePath(path) {\n  return startsWithDotDotSlash(path) || startsWithDotSlash(path);\n}\nfunction isString(path) {\n  return typeof path === \"string\" || path instanceof String;\n}\nfunction joinPaths(...paths) {\n  return paths.filter(isString).map((path, i) => {\n    if (i === 0) {\n      return removeTrailingForwardSlash(path);\n    } else if (i === paths.length - 1) {\n      return removeLeadingForwardSlash(path);\n    } else {\n      return trimSlashes(path);\n    }\n  }).join(\"/\");\n}\nfunction removeFileExtension(path) {\n  let idx = path.lastIndexOf(\".\");\n  return idx === -1 ? path : path.slice(0, idx);\n}\nfunction removeQueryString(path) {\n  const index = path.lastIndexOf(\"?\");\n  return index > 0 ? path.substring(0, index) : path;\n}\nfunction isRemotePath(src) {\n  return /^(http|ftp|https|ws):?\\/\\//.test(src) || src.startsWith(\"data:\");\n}\nfunction slash(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\nexport {\n  appendExtension,\n  appendForwardSlash,\n  collapseDuplicateSlashes,\n  isRelativePath,\n  isRemotePath,\n  joinPaths,\n  prependForwardSlash,\n  removeFileExtension,\n  removeLeadingForwardSlash,\n  removeLeadingForwardSlashWindows,\n  removeQueryString,\n  removeTrailingForwardSlash,\n  slash,\n  startsWithDotDotSlash,\n  startsWithDotSlash,\n  startsWithForwardSlash,\n  trimSlashes\n};\n", "import Markdoc, {\n} from \"@markdoc/markdoc\";\nimport { createComponent, renderComponent } from \"astro/runtime/server/index.js\";\nimport {} from \"./config.js\";\nimport { setupHeadingConfig } from \"./heading-ids.js\";\nimport { htmlTag } from \"./html/tagdefs/html.tag.js\";\nasync function setupConfig(userConfig = {}, options) {\n  let defaultConfig = setupHeadingConfig();\n  if (userConfig.extends) {\n    for (let extension of userConfig.extends) {\n      if (extension instanceof Promise) {\n        extension = await extension;\n      }\n      defaultConfig = mergeConfig(defaultConfig, extension);\n    }\n  }\n  let merged = mergeConfig(defaultConfig, userConfig);\n  if (options?.allowHTML) {\n    merged = mergeConfig(merged, HTML_CONFIG);\n  }\n  return merged;\n}\nfunction setupConfigSync(userConfig = {}, options) {\n  const defaultConfig = setupHeadingConfig();\n  let merged = mergeConfig(defaultConfig, userConfig);\n  if (options?.allowHTML) {\n    merged = mergeConfig(merged, HTML_CONFIG);\n  }\n  return merged;\n}\nfunction mergeConfig(configA, configB) {\n  return {\n    ...configA,\n    ...configB,\n    ctx: {\n      ...configA.ctx,\n      ...configB.ctx\n    },\n    tags: {\n      ...configA.tags,\n      ...configB.tags\n    },\n    nodes: {\n      ...configA.nodes,\n      ...configB.nodes\n    },\n    functions: {\n      ...configA.functions,\n      ...configB.functions\n    },\n    variables: {\n      ...configA.variables,\n      ...configB.variables\n    },\n    partials: {\n      ...configA.partials,\n      ...configB.partials\n    },\n    validation: {\n      ...configA.validation,\n      ...configB.validation\n    }\n  };\n}\nfunction resolveComponentImports(markdocConfig, tagComponentMap, nodeComponentMap) {\n  for (const [tag, render] of Object.entries(tagComponentMap)) {\n    const config = markdocConfig.tags[tag];\n    if (config)\n      config.render = render;\n  }\n  for (const [node, render] of Object.entries(nodeComponentMap)) {\n    const config = markdocConfig.nodes[node];\n    if (config)\n      config.render = render;\n  }\n  return markdocConfig;\n}\nfunction getTextContent(childNodes) {\n  let text = \"\";\n  for (const node of childNodes) {\n    if (typeof node === \"string\" || typeof node === \"number\") {\n      text += node;\n    } else if (typeof node === \"object\" && Markdoc.Tag.isTag(node)) {\n      text += getTextContent(node.children);\n    }\n  }\n  return text;\n}\nconst headingLevels = [1, 2, 3, 4, 5, 6];\nfunction collectHeadings(children, collectedHeadings) {\n  for (const node of children) {\n    if (typeof node !== \"object\" || !Markdoc.Tag.isTag(node))\n      continue;\n    if (node.attributes.__collectHeading === true && typeof node.attributes.level === \"number\") {\n      collectedHeadings.push({\n        slug: node.attributes.id,\n        depth: node.attributes.level,\n        text: getTextContent(node.children)\n      });\n      continue;\n    }\n    for (const level of headingLevels) {\n      if (node.name === \"h\" + level) {\n        collectedHeadings.push({\n          slug: node.attributes.id,\n          depth: level,\n          text: getTextContent(node.children)\n        });\n      }\n    }\n    collectHeadings(node.children, collectedHeadings);\n  }\n}\nfunction createGetHeadings(stringifiedAst, userConfig, options) {\n  return function getHeadings() {\n    const config = setupConfigSync(userConfig, options);\n    const ast = Markdoc.Ast.fromJSON(stringifiedAst);\n    const content = Markdoc.transform(ast, config);\n    let collectedHeadings = [];\n    collectHeadings(Array.isArray(content) ? content : [content], collectedHeadings);\n    return collectedHeadings;\n  };\n}\nfunction createContentComponent(Renderer, stringifiedAst, userConfig, options, tagComponentMap, nodeComponentMap) {\n  return createComponent({\n    async factory(result, props) {\n      const withVariables = mergeConfig(userConfig, { variables: props });\n      const config = resolveComponentImports(\n        await setupConfig(withVariables, options),\n        tagComponentMap,\n        nodeComponentMap\n      );\n      return renderComponent(result, Renderer.name, Renderer, { stringifiedAst, config }, {});\n    },\n    propagation: \"self\"\n  });\n}\nconst HTML_CONFIG = {\n  tags: {\n    \"html-tag\": htmlTag\n  }\n};\nexport {\n  collectHeadings,\n  createContentComponent,\n  createGetHeadings,\n  getTextContent,\n  mergeConfig,\n  resolveComponentImports,\n  setupConfig,\n  setupConfigSync\n};\n", "class MarkdocError extends Error {\n  loc;\n  title;\n  hint;\n  frame;\n  type = \"MarkdocError\";\n  constructor(props, ...params) {\n    super(...params);\n    const { title = \"MarkdocError\", message, stack, location, hint, frame } = props;\n    this.title = title;\n    if (message)\n      this.message = message;\n    this.stack = stack ? stack : this.stack;\n    this.loc = location;\n    this.hint = hint;\n    this.frame = frame;\n  }\n}\nfunction prependForwardSlash(str) {\n  return str[0] === \"/\" ? str : \"/\" + str;\n}\nfunction isValidUrl(str) {\n  try {\n    new URL(str);\n    return true;\n  } catch {\n    return false;\n  }\n}\nconst PROPAGATED_ASSET_FLAG = \"astroPropagatedAssets\";\nfunction hasContentFlag(viteId, flag) {\n  const flags = new URLSearchParams(viteId.split(\"?\")[1] ?? \"\");\n  return flags.has(flag);\n}\nconst componentConfigSymbol = Symbol.for(\"@astrojs/markdoc/component-config\");\nfunction isComponentConfig(value) {\n  return typeof value === \"object\" && value !== null && componentConfigSymbol in value;\n}\nexport {\n  MarkdocError,\n  PROPAGATED_ASSET_FLAG,\n  componentConfigSymbol,\n  hasContentFlag,\n  isComponentConfig,\n  isValidUrl,\n  prependForwardSlash\n};\n", "import Markdoc, {\n} from \"@markdoc/markdoc\";\nimport Slugger from \"github-slugger\";\nimport { getTextContent } from \"./runtime.js\";\nimport { MarkdocError } from \"./utils.js\";\nfunction getSlug(attributes, children, headingSlugger) {\n  if (attributes.id && typeof attributes.id === \"string\") {\n    return attributes.id;\n  }\n  const textContent = attributes.content ?? getTextContent(children);\n  let slug = headingSlugger.slug(textContent);\n  if (slug.endsWith(\"-\"))\n    slug = slug.slice(0, -1);\n  return slug;\n}\nconst heading = {\n  children: [\"inline\"],\n  attributes: {\n    id: { type: String },\n    level: { type: Number, required: true, default: 1 }\n  },\n  transform(node, config) {\n    const { level, ...attributes } = node.transformAttributes(config);\n    const children = node.transformChildren(config);\n    if (!config.ctx?.headingSlugger) {\n      throw new MarkdocError({\n        message: \"Unexpected problem adding heading IDs to Markdoc file. Did you modify the `ctx.headingSlugger` property in your Markdoc config?\"\n      });\n    }\n    const slug = getSlug(attributes, children, config.ctx.headingSlugger);\n    const render = config.nodes?.heading?.render ?? `h${level}`;\n    const tagProps = (\n      // For components, pass down `level` as a prop,\n      // alongside `__collectHeading` for our `headings` collector.\n      // Avoid accidentally rendering `level` as an HTML attribute otherwise!\n      typeof render === \"string\" ? { ...attributes, id: slug } : { ...attributes, id: slug, __collectHeading: true, level }\n    );\n    return new Markdoc.Tag(render, tagProps, children);\n  }\n};\nfunction setupHeadingConfig() {\n  const headingSlugger = new Slugger();\n  return {\n    ctx: {\n      headingSlugger\n    },\n    nodes: {\n      heading\n    }\n  };\n}\nexport {\n  heading,\n  setupHeadingConfig\n};\n", "import { isRelativePath } from \"@astrojs/internal-helpers/path\";\nimport _Markdoc from \"@markdoc/markdoc\";\nimport { heading } from \"./heading-ids.js\";\nimport { componentConfigSymbol } from \"./utils.js\";\nconst Markdoc = _Markdoc;\nconst nodes = { ...Markdoc.nodes, heading };\nfunction defineMarkdocConfig(config) {\n  return config;\n}\nfunction component(pathnameOrPkgName, namedExport) {\n  return {\n    type: isNpmPackageName(pathnameOrPkgName) ? \"package\" : \"local\",\n    path: pathnameOrPkgName,\n    namedExport,\n    [componentConfigSymbol]: true\n  };\n}\nfunction isNpmPackageName(pathname) {\n  return !isRelativePath(pathname) && !pathname.startsWith(\"/\");\n}\nexport {\n  Markdoc,\n  component,\n  defineMarkdocConfig,\n  nodes\n};\n"],
  "mappings": "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",
  "names": ["Markdoc"]
}
