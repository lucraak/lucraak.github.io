{
  "version": 3,
  "sources": ["../../shikiji/dist/langs/mermaid.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"fileTypes\": [\"mermaid\"], \"patterns\": [{ \"include\": \"#mermaid\" }], \"repository\": { \"mermaid\": { \"patterns\": [{ \"comment\": \"Class Diagram\", \"begin\": \"^\\\\s*(classDiagram)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"comment\": '(class name) (\"multiplicity relationship\")? (relationship) (\"multiplicity relationship\")? (class name) :? (labelText)?', \"match\": '([\\\\w-]+)\\\\s(\"(?:\\\\d+|\\\\*|0..\\\\d+|1..\\\\d+|1..\\\\*)\")?\\\\s?(--o|--\\\\*|\\\\<--|--\\\\>|<\\\\.\\\\.|\\\\.\\\\.\\\\>|\\\\<\\\\|\\\\.\\\\.|\\\\.\\\\.\\\\|\\\\>|\\\\<\\\\|--|--\\\\|>|--\\\\*|--|\\\\.\\\\.|\\\\*--|o--)\\\\s(\"(?:\\\\d+|\\\\*|0..\\\\d+|1..\\\\d+|1..\\\\*)\")?\\\\s?([\\\\w-]+)\\\\s?(:)?\\\\s(.*)$', \"captures\": { \"1\": { \"name\": \"entity.name.type.class.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"entity.name.type.class.mermaid\" }, \"6\": { \"name\": \"keyword.control.mermaid\" }, \"7\": { \"name\": \"string\" } } }, { \"comment\": \"(class name) : (visibility)?(function)( (function param/generic param)? )(classifier)? (return/generic return)?$\", \"match\": \"([\\\\w-]+)\\\\s?(:)\\\\s([\\\\+~#-])?([\\\\w-]+)(\\\\()([\\\\w-]+)?(~)?([\\\\w-]+)?(~)?\\\\s?([\\\\w-]+)?(\\\\))([*\\\\$])?\\\\s?([\\\\w-]+)?(~)?([\\\\w-]+)?(~)?$\", \"captures\": { \"1\": { \"name\": \"entity.name.type.class.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"entity.name.function.mermaid\" }, \"5\": { \"name\": \"punctuation.parenthesis.open.mermaid\" }, \"6\": { \"name\": \"storage.type.mermaid\" }, \"7\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"8\": { \"name\": \"storage.type.mermaid\" }, \"9\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"10\": { \"name\": \"entity.name.variable.parameter.mermaid\" }, \"11\": { \"name\": \"punctuation.parenthesis.closed.mermaid\" }, \"12\": { \"name\": \"keyword.control.mermaid\" }, \"13\": { \"name\": \"storage.type.mermaid\" }, \"14\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"15\": { \"name\": \"storage.type.mermaid\" }, \"16\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" } } }, { \"comment\": \"(class name) : (visibility)?(datatype/generic data type) (attribute name)$\", \"match\": \"([\\\\w-]+)\\\\s?(:)\\\\s([\\\\+~#-])?([\\\\w-]+)(~)?([\\\\w-]+)?(~)?\\\\s([\\\\w-]+)?$\", \"captures\": { \"1\": { \"name\": \"entity.name.type.class.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"storage.type.mermaid\" }, \"5\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"6\": { \"name\": \"storage.type.mermaid\" }, \"7\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"8\": { \"name\": \"entity.name.variable.field.mermaid\" } } }, { \"comment\": \"<<(Annotation)>> (class name)\", \"match\": \"(<<)([\\\\w-]+)(>>)\\\\s?([\\\\w-]+)?\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"2\": { \"name\": \"storage.type.mermaid\" }, \"3\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"4\": { \"name\": \"entity.name.type.class.mermaid\" } } }, { \"comment\": \"class (class name) ~?(generic type)?~? ({)\", \"begin\": \"(class)\\\\s+([\\\\w-]+)(~)?([\\\\w-]+)?(~)?\\\\s?({)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.type.class.mermaid\" }, \"3\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"4\": { \"name\": \"storage.type.mermaid\" }, \"5\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"6\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"comment\": \"(visibility)?(function)( (function param/generic param)? )(classifier)? (return/generic return)?$\", \"begin\": \"\\\\s([\\\\+~#-])?([\\\\w-]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.function.mermaid\" }, \"3\": { \"name\": \"punctuation.parenthesis.open.mermaid\" } }, \"patterns\": [{ \"comment\": \"(TBD)\", \"match\": \"\\\\s*,?\\\\s*([\\\\w-]+)?(~)?([\\\\w-]+)?(~)?\\\\s?([\\\\w-]+)?\", \"captures\": { \"1\": { \"name\": \"storage.type.mermaid\" }, \"2\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"3\": { \"name\": \"storage.type.mermaid\" }, \"4\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"5\": { \"name\": \"entity.name.variable.parameter.mermaid\" } } }], \"end\": \"(\\\\))([*\\\\$])?\\\\s?([\\\\w-]+)?(~)?([\\\\w-]+)?(~)?$\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parenthesis.closed.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"storage.type.mermaid\" }, \"4\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"5\": { \"name\": \"storage.type.mermaid\" }, \"6\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" } } }, { \"comment\": \"(visibility)?(datatype/generic data type) (attribute name)$\", \"match\": \"\\\\s([\\\\+~#-])?([\\\\w-]+)(~)?([\\\\w-]+)?(~)?\\\\s([\\\\w-]+)?$\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"storage.type.mermaid\" }, \"3\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"4\": { \"name\": \"storage.type.mermaid\" }, \"5\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"6\": { \"name\": \"entity.name.variable.field.mermaid\" } } }, { \"comment\": \"<<(Annotation)>> (class name)\", \"match\": \"(<<)([\\\\w-]+)(>>)\\\\s?([\\\\w-]+)?\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"2\": { \"name\": \"storage.type.mermaid\" }, \"3\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" }, \"4\": { \"name\": \"entity.name.type.class.mermaid\" } } }], \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"class (class name) ~?(generic type)?~?\", \"match\": \"(class)\\\\s+([\\\\w-]+)(~)?([\\\\w-]+)?(~)?\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.type.class.mermaid\" }, \"3\": { \"name\": \"punctuation.definition.typeparameters.begin.mermaid\" }, \"4\": { \"name\": \"storage.type.mermaid\" }, \"5\": { \"name\": \"punctuation.definition.typeparameters.end.mermaid\" } } }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"Entity Relationship Diagram\", \"begin\": \"^\\\\s*(erDiagram)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"comment\": \"(entity)\", \"match\": \"^\\\\s*([\\\\w-]+)$\", \"name\": \"variable\" }, { \"comment\": \"(entity) {\", \"begin\": \"\\\\s+([\\\\w-]+)\\\\s+({)\", \"beginCaptures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"comment\": '(type) (name) (PK|FK)? (\"comment\")?', \"match\": `\\\\s*([\\\\w-]+)\\\\s+([\\\\w-]+)\\\\s+(PK|FK)?\\\\s*(\"[\"\\\\($&%\\\\^/#.,?!;:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*\")?\\\\s*`, \"captures\": { \"1\": { \"name\": \"storage.type.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"string\" } } }], \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"(entity) (relationship) (entity) : (label)\", \"match\": '\\\\s*([\\\\w-]+)\\\\s+((?:\\\\|o|\\\\|\\\\||}o|}\\\\|)(?:..|--)(?:o\\\\||\\\\|\\\\||o{|\\\\|{))\\\\s+([\\\\w-]+)\\\\s+(:)\\\\s+((?:\"[\\\\w\\\\s]*\")|(?:[\\\\w-]+))', \"captures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"variable\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"string\" } } }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"Gantt Diagram\", \"begin\": \"^\\\\s*(gantt)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"match\": \"(dateFormat)\\\\s+([\\\\w\\\\-\\\\.]+)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.function.mermaid\" } } }, { \"match\": \"(axisFormat)\\\\s+([\\\\w\\\\%\\\\/\\\\\\\\\\\\-\\\\.]+)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.function.mermaid\" } } }, { \"match\": `(title)\\\\s+(\\\\s*[\"\\\\(\\\\)$&%\\\\^/#.,?!;:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*)`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"match\": \"(excludes)\\\\s+((?:[\\\\d\\\\-,\\\\s]+|monday|tuesday|wednesday|thursday|friday|saturday|sunday|weekends)+)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"match\": \"^\\\\s+(todayMarker)\\\\s+(.*)$\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"match\": `(section)\\\\s+(\\\\s*[\"\\\\(\\\\)$&%\\\\^/#.,?!;:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*)`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"begin\": \"^\\\\s(.*)(:)\", \"beginCaptures\": { \"1\": { \"name\": \"string\" }, \"2\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"(crit|done|active|after)\", \"name\": \"entity.name.function.mermaid\" }, { \"match\": \"\\\\%%.*\", \"name\": \"comment\" }], \"end\": \"$\" }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"Git Graph\", \"begin\": \"^\\\\s*(gitGraph)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"comment\": \"commit\", \"begin\": \"\\\\s*(commit)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"comment\": '(id)(:) (\"id\")', \"match\": '\\\\s*(id)(:)\\\\s?(\"[^\"\\\\n]*\")', \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } } }, { \"comment\": \"(type)(:) (COMMIT_TYPE)\", \"match\": \"\\\\s*(type)(:)\\\\s?(NORMAL|REVERSE|HIGHLIGHT)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"entity.name.function.mermaid\" } } }, { \"comment\": '(tag)(:) (\"tag\")', \"match\": `\\\\s*(tag)(:)\\\\s?(\"[\\\\($&%\\\\^/#.,?!;:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*\")`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } } }], \"end\": \"$\" }, { \"comment\": \"(checkout) (branch-name)\", \"match\": '\\\\s*(checkout)\\\\s*([^\\\\s\"]*)', \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" } } }, { \"comment\": \"(branch) (branch-name) (order)?(:) (number)\", \"match\": '\\\\s*(branch)\\\\s*([^\\\\s\"]*)\\\\s*(?:(order)(:)\\\\s?(\\\\d+))?', \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"constant.numeric.decimal.mermaid\" } } }, { \"comment\": '(merge) (branch-name) (tag: \"tag-name\")?', \"match\": '\\\\s*(merge)\\\\s*([^\\\\s\"]*)\\\\s*(?:(tag)(:)\\\\s?(\"[^\"\\\\n]*\"))?', \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"string\" } } }, { \"comment\": '(cherry-pick) (id)(:)(\"commit-id\")', \"match\": '\\\\s*(cherry-pick)\\\\s+(id)(:)\\\\s*(\"[^\"\\\\n]*\")', \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"string\" } } }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"Graph\", \"begin\": \"^\\\\s*(graph|flowchart)\\\\s+([\\\\p{Letter}\\\\ 0-9]+)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.function.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"match\": \"\\\\b(subgraph)\\\\s+([\\\\p{Letter}\\\\ 0-9]+)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.function.mermaid\" } }, \"name\": \"meta.function.mermaid\" }, { \"match\": \"\\\\b(end|RB|BT|RL|TD|LR)\\\\b\", \"name\": \"keyword.control.mermaid\" }, { \"comment\": \"(Entity)(Edge/Shape)(Text)(Edge/Shape)\", \"begin\": \"(\\\\b(?:(?!--|==)[-\\\\w])+\\\\b\\\\s*)(\\\\(\\\\[|\\\\[\\\\[|\\\\[\\\\(|\\\\[|\\\\(+|\\\\>|\\\\{|\\\\(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } }, \"patterns\": [{ \"comment\": '(\"multi-line text\")', \"begin\": '\\\\s*(\")', \"beginCaptures\": { \"1\": { \"name\": \"string\" } }, \"patterns\": [{ \"comment\": \"capture inner text between quotes\", \"begin\": '([^\"]*)', \"beginCaptures\": { \"1\": { \"name\": \"string\" } }, \"patterns\": [{ \"match\": '([^\"]*)', \"captures\": { \"1\": { \"name\": \"comment\" } } }], \"end\": '(?=\")' }], \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"string\" } } }, { \"comment\": \"(single line text)\", \"match\": \"\\\\s*([$&%\\\\^/#.,?!;:*+<>_\\\\'\\\\\\\\\\\\w\\\\s]+)\", \"captures\": { \"1\": { \"name\": \"string\" } } }], \"end\": \"(\\\\]\\\\)|\\\\]\\\\]|\\\\)\\\\]|\\\\]|\\\\)+|\\\\}|\\\\)\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": '(Graph Link)(\"Multiline text\")(Graph Link)', \"begin\": \"\\\\s*((?:-{2,5}|={2,5})[xo>]?\\\\|)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"comment\": '(\"multi-line text\")', \"begin\": '\\\\s*(\")', \"beginCaptures\": { \"1\": { \"name\": \"string\" } }, \"patterns\": [{ \"comment\": \"capture inner text between quotes\", \"begin\": '([^\"]*)', \"beginCaptures\": { \"1\": { \"name\": \"string\" } }, \"patterns\": [{ \"match\": '([^\"]*)', \"captures\": { \"1\": { \"name\": \"comment\" } } }], \"end\": '(?=\")' }], \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"string\" } } }, { \"comment\": \"(single line text)\", \"match\": \"\\\\s*([$&%\\\\^/#.,?!;:*+<>_\\\\'\\\\\\\\\\\\w\\\\s]+)\", \"captures\": { \"1\": { \"name\": \"string\" } } }], \"end\": \"(\\\\|)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"(Graph Link Start Arrow)(Text)(Graph Link End Arrow)\", \"match\": \"\\\\s*([xo<]?(?:-{2,5}|={2,5}|-\\\\.{1,3}|-\\\\.))((?:(?!--|==)[\\\\w\\\\s*+%=\\\\\\\\/:\\\\.\\\\-'`,\\\"&^#$!?])*)((?:-{2,5}|={2,5}|\\\\.{1,3}-|\\\\.-)[xo>]?)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" }, \"3\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"(Graph Link)\", \"match\": \"\\\\s*([ox<]?(?:-.{1,3}-|-{1,3}|={1,3})[ox>]?)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"Entity\", \"match\": \"(\\\\b(?:(?!--|==)[-\\\\w])+\\\\b\\\\s*)\", \"name\": \"variable\" }, { \"comment\": \"(Class)(Node(s))(ClassName)\", \"match\": \"\\\\s*(class)\\\\s+(\\\\b[-,\\\\w]+)\\\\s+(\\\\b\\\\w+\\\\b)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"string\" } } }, { \"comment\": \"(ClassDef)(ClassName)(Styles)\", \"match\": \"\\\\s*(classDef)\\\\s+(\\\\b\\\\w+\\\\b)\\\\s+(\\\\b[-,:;#\\\\w]+)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"string\" } } }, { \"comment\": \"(Click)(Entity)(Link)?(Tooltip)\", \"match\": '\\\\s*(click)\\\\s+(\\\\b[-\\\\w]+\\\\b\\\\s*)(\\\\b\\\\w+\\\\b)?\\\\s(\"*.*\")', \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"variable\" }, \"4\": { \"name\": \"string\" } } }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"Pie Chart\", \"begin\": \"^\\\\s*(pie)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"match\": `(title)\\\\s+(\\\\s*[\"\\\\(\\\\)$&%\\\\^/#.,?!;:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*)`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"begin\": \"\\\\s(.*)(:)\", \"beginCaptures\": { \"1\": { \"name\": \"string\" }, \"2\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }], \"end\": \"$\" }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"Sequence Diagram\", \"begin\": \"^\\\\s*(sequenceDiagram)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"(\\\\%%|#).*\", \"name\": \"comment\" }, { \"comment\": \"(title)(title text)\", \"match\": `(title)\\\\s*(:)?\\\\s+(\\\\s*[\"\\\\(\\\\)$&%\\\\^/#.,?!:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*)`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } } }, { \"comment\": \"(participant)(Actor)(as)?(Label)?\", \"match\": `\\\\s*(participant|actor)\\\\s+((?:(?! as )[\"\\\\(\\\\)$&%\\\\^/#.?!*=<>\\\\'\\\\\\\\\\\\w\\\\s])+)\\\\s*(as)?\\\\s([\"\\\\(\\\\)$&%\\\\^/#.,?!*=<>\\\\'\\\\\\\\\\\\w\\\\s]+)?`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"string\" } } }, { \"comment\": \"(activate/deactivate)(Actor)\", \"match\": `\\\\s*((?:de)?activate)\\\\s+(\\\\b[\"\\\\(\\\\)$&%\\\\^/#.?!*=<>\\\\'\\\\\\\\\\\\w\\\\s]+\\\\b\\\\s*)`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" } } }, { \"comment\": \"(Note)(direction)(Actor)(,)?(Actor)?(:)(Message)\", \"match\": `\\\\s*(Note)\\\\s+((?:left|right)\\\\sof|over)\\\\s+(\\\\b[\"\\\\(\\\\)$&%\\\\^/#.?!*=<>\\\\'\\\\\\\\\\\\w\\\\s]+\\\\b\\\\s*)(,)?(\\\\b[\"\\\\(\\\\)$&%\\\\^/#.?!*=<>\\\\'\\\\\\\\\\\\w\\\\s]+\\\\b\\\\s*)?(:)(?:\\\\s+([^;#]*))?`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"entity.name.function.mermaid\" }, \"3\": { \"name\": \"variable\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"variable\" }, \"6\": { \"name\": \"keyword.control.mermaid\" }, \"7\": { \"name\": \"string\" } } }, { \"comment\": \"(loop)(loop text)\", \"match\": \"\\\\s*(loop)(?:\\\\s+([^;#]*))?\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"comment\": \"(end)\", \"match\": \"\\\\s*(end)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"(alt/else/opt/par/and/autonumber)(text)\", \"match\": \"\\\\s*(alt|else|opt|par|and|rect|autonumber)(?:\\\\s+([^#;]*))?\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"comment\": \"(Actor)(Arrow)(Actor)(:)(Message)\", \"match\": `\\\\s*(\\\\b[\"\\\\(\\\\)$&%\\\\^/#.?!*=<>\\\\'\\\\\\\\\\\\w\\\\s]+\\\\b)\\\\s*(-?-(?:\\\\>|x|\\\\))\\\\>?[+-]?)\\\\s*([\"\\\\(\\\\)$&%\\\\^/#.?!*=<>\\\\'\\\\\\\\\\\\w\\\\s]+\\\\b)\\\\s*(:)\\\\s*([^;#]*)`, \"captures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"variable\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"string\" } } }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"State Diagram\", \"begin\": \"^\\\\s*(stateDiagram(?:-v2)?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"comment\": \"}\", \"match\": \"\\\\s+(})\\\\s+\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"--\", \"match\": \"\\\\s+(--)\\\\s+\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"(state)\", \"match\": \"^\\\\s*([\\\\w-]+)$\", \"name\": \"variable\" }, { \"comment\": \"(state) : (description)\", \"match\": \"([\\\\w-]+)\\\\s+(:)\\\\s+(\\\\s*[-\\\\w\\\\s]+\\\\b)\", \"captures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } } }, { \"comment\": \"state\", \"begin\": \"(state)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"comment\": '\"(description)\" as (state)', \"match\": '\\\\s+(\"[-\\\\w\\\\s]+\\\\b\")\\\\s+(as)\\\\s+([\\\\w-]+)', \"captures\": { \"1\": { \"name\": \"string\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"variable\" } } }, { \"comment\": \"(state name) {\", \"match\": \"\\\\s+([\\\\w-]+)\\\\s+({)\", \"captures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" } } }, { \"comment\": \"(state name) <<fork|join>>\", \"match\": \"\\\\s+([\\\\w-]+)\\\\s+(<<(?:fork|join)>>)\", \"captures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" } } }], \"end\": \"$\" }, { \"comment\": \"(state) -->\", \"begin\": \"([\\\\w-]+)\\\\s+(-->)\", \"beginCaptures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"comment\": \"(state) (:)? (transition text)?\", \"match\": \"\\\\s+([\\\\w-]+)\\\\s*(:)?\\\\s*([^\\\\n:]+)?\", \"captures\": { \"1\": { \"name\": \"variable\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } } }, { \"comment\": \"[*] (:)? (transition text)?\", \"match\": \"(\\\\[\\\\*\\\\])\\\\s*(:)?\\\\s*([^\\\\n:]+)?\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"string\" } } }], \"end\": \"$\" }, { \"comment\": \"[*] --> (state) (:)? (transition text)?\", \"match\": \"(\\\\[\\\\*\\\\])\\\\s+(-->)\\\\s+([\\\\w-]+)\\\\s*(:)?\\\\s*([^\\\\n:]+)?\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"variable\" }, \"4\": { \"name\": \"keyword.control.mermaid\" }, \"5\": { \"name\": \"string\" } } }, { \"comment\": \"note left|right of (state name)\", \"match\": \"(note (?:left|right) of)\\\\s+([\\\\w-]+)\\\\s+(:)\\\\s*([^\\\\n:]+)\", \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control.mermaid\" }, \"4\": { \"name\": \"string\" } } }, { \"comment\": \"note left|right of (state name) (note text) end note\", \"begin\": \"(note (?:left|right) of)\\\\s+([\\\\w-]+)(.|\\\\n)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"variable\" } }, \"contentName\": \"string\", \"end\": \"(end note)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } } }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }, { \"comment\": \"User Journey\", \"begin\": \"^\\\\s*(journey)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"match\": \"\\\\%%.*\", \"name\": \"comment\" }, { \"match\": `(title|section)\\\\s+(\\\\s*[\"\\\\(\\\\)$&%\\\\^/#.,?!;:*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*)`, \"captures\": { \"1\": { \"name\": \"keyword.control.mermaid\" }, \"2\": { \"name\": \"string\" } } }, { \"begin\": `\\\\s*([\"\\\\(\\\\)$&%\\\\^/.,?!*+=<>\\\\'\\\\\\\\\\\\-\\\\w\\\\s]*)\\\\s*(:)\\\\s*(\\\\d+)\\\\s*(:)`, \"beginCaptures\": { \"1\": { \"name\": \"string\" }, \"2\": { \"name\": \"keyword.control.mermaid\" }, \"3\": { \"name\": \"constant.numeric.decimal.mermaid\" }, \"4\": { \"name\": \"keyword.control.mermaid\" } }, \"patterns\": [{ \"comment\": \"(taskName)\", \"match\": \"\\\\s*,?\\\\s*([^,#\\\\n]+)\", \"captures\": { \"1\": { \"name\": \"variable\" } } }], \"end\": \"$\" }], \"end\": \"(^|\\\\G)(?=\\\\s*[`:~]{3,}\\\\s*$)\" }] } }, \"scopeName\": \"source.mermaid\", \"name\": \"mermaid\", \"displayName\": \"Mermaid\" });\nvar mermaid = [\n  lang\n];\n\nexport { mermaid as default };\n"],
  "mappings": "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",
  "names": []
}
