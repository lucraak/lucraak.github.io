{
  "version": 3,
  "sources": ["../../shikiji/dist/langs/json.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"information_for_contributors\": [\"This file has been converted from https://github.com/microsoft/vscode-JSON.tmLanguage/blob/master/JSON.tmLanguage\", \"If you want to provide a fix or improvement, please create a pull request against the original repository.\", \"Once accepted there, we are happy to receive an update request.\"], \"version\": \"https://github.com/microsoft/vscode-JSON.tmLanguage/commit/9bd83f1c252b375e957203f21793316203f61f70\", \"name\": \"json\", \"scopeName\": \"source.json\", \"patterns\": [{ \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json\" } }, \"name\": \"meta.structure.array.json\", \"patterns\": [{ \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.json\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.js\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.json\" }, \"number\": { \"match\": \"(?x)        # turn on extended mode\\n  -?        # an optional minus\\n  (?:\\n    0       # a zero\\n    |       # ...or...\\n    [1-9]   # a 1-9 character\\n    \\\\d*     # followed by zero or more digits\\n  )\\n  (?:\\n    (?:\\n      \\\\.    # a period\\n      \\\\d+   # followed by one or more digits\\n    )?\\n    (?:\\n      [eE]  # an e character\\n      [+-]? # followed by an option +/-\\n      \\\\d+   # followed by one or more digits\\n    )?      # make exponent optional\\n  )?        # make decimal portion optional\", \"name\": \"constant.numeric.json\" }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json\" } }, \"name\": \"meta.structure.dictionary.json\", \"patterns\": [{ \"comment\": \"the JSON object key\", \"include\": \"#objectkey\" }, { \"include\": \"#comments\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json\" } }, \"name\": \"meta.structure.dictionary.value.json\", \"patterns\": [{ \"comment\": \"the JSON object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, \"string\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json\" } }, \"name\": \"string.quoted.double.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"objectkey\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.end.json\" } }, \"name\": \"string.json support.type.property-name.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"stringcontent\": { \"patterns\": [{ \"match\": '(?x)                # turn on extended mode\\n  \\\\\\\\                # a literal backslash\\n  (?:               # ...followed by...\\n    [\"\\\\\\\\/bfnrt]     # one of these characters\\n    |               # ...or...\\n    u               # a u\\n    [0-9a-fA-F]{4}) # and four hex digits', \"name\": \"constant.character.escape.json\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }, { \"include\": \"#comments\" }] } }, \"displayName\": \"JSON\" });\nvar json = [\n  lang\n];\n\nexport { json as default };\n"],
  "mappings": ";AAAA,IAAM,OAAO,OAAO,OAAO,EAAE,gCAAgC,CAAC,qHAAqH,8GAA8G,iEAAiE,GAAG,WAAW,uGAAuG,QAAQ,QAAQ,aAAa,eAAe,YAAY,CAAC,EAAE,WAAW,SAAS,CAAC,GAAG,cAAc,EAAE,SAAS,EAAE,SAAS,OAAO,iBAAiB,EAAE,KAAK,EAAE,QAAQ,0CAA0C,EAAE,GAAG,OAAO,OAAO,eAAe,EAAE,KAAK,EAAE,QAAQ,wCAAwC,EAAE,GAAG,QAAQ,6BAA6B,YAAY,CAAC,EAAE,WAAW,SAAS,GAAG,EAAE,SAAS,KAAK,QAAQ,mCAAmC,GAAG,EAAE,SAAS,aAAa,QAAQ,gDAAgD,CAAC,EAAE,GAAG,YAAY,EAAE,YAAY,CAAC,EAAE,SAAS,gBAAgB,YAAY,EAAE,KAAK,EAAE,QAAQ,sCAAsC,EAAE,GAAG,OAAO,QAAQ,QAAQ,mCAAmC,GAAG,EAAE,SAAS,QAAQ,YAAY,EAAE,KAAK,EAAE,QAAQ,sCAAsC,EAAE,GAAG,OAAO,QAAQ,QAAQ,qBAAqB,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,QAAQ,sCAAsC,EAAE,GAAG,SAAS,eAAe,QAAQ,+BAA+B,CAAC,EAAE,GAAG,YAAY,EAAE,SAAS,6BAA6B,QAAQ,yBAAyB,GAAG,UAAU,EAAE,SAAS,mgBAAmgB,QAAQ,wBAAwB,GAAG,UAAU,EAAE,SAAS,OAAO,iBAAiB,EAAE,KAAK,EAAE,QAAQ,+CAA+C,EAAE,GAAG,OAAO,OAAO,eAAe,EAAE,KAAK,EAAE,QAAQ,6CAA6C,EAAE,GAAG,QAAQ,kCAAkC,YAAY,CAAC,EAAE,WAAW,uBAAuB,WAAW,aAAa,GAAG,EAAE,WAAW,YAAY,GAAG,EAAE,SAAS,KAAK,iBAAiB,EAAE,KAAK,EAAE,QAAQ,kDAAkD,EAAE,GAAG,OAAO,eAAe,eAAe,EAAE,KAAK,EAAE,QAAQ,6CAA6C,EAAE,GAAG,QAAQ,wCAAwC,YAAY,CAAC,EAAE,WAAW,yBAAyB,WAAW,SAAS,GAAG,EAAE,SAAS,WAAW,QAAQ,qDAAqD,CAAC,EAAE,GAAG,EAAE,SAAS,aAAa,QAAQ,qDAAqD,CAAC,EAAE,GAAG,UAAU,EAAE,SAAS,KAAK,iBAAiB,EAAE,KAAK,EAAE,QAAQ,2CAA2C,EAAE,GAAG,OAAO,KAAK,eAAe,EAAE,KAAK,EAAE,QAAQ,yCAAyC,EAAE,GAAG,QAAQ,6BAA6B,YAAY,CAAC,EAAE,WAAW,iBAAiB,CAAC,EAAE,GAAG,aAAa,EAAE,SAAS,KAAK,iBAAiB,EAAE,KAAK,EAAE,QAAQ,oDAAoD,EAAE,GAAG,OAAO,KAAK,eAAe,EAAE,KAAK,EAAE,QAAQ,kDAAkD,EAAE,GAAG,QAAQ,+CAA+C,YAAY,CAAC,EAAE,WAAW,iBAAiB,CAAC,EAAE,GAAG,iBAAiB,EAAE,YAAY,CAAC,EAAE,SAAS,4RAA4R,QAAQ,iCAAiC,GAAG,EAAE,SAAS,SAAS,QAAQ,kDAAkD,CAAC,EAAE,GAAG,SAAS,EAAE,YAAY,CAAC,EAAE,WAAW,YAAY,GAAG,EAAE,WAAW,UAAU,GAAG,EAAE,WAAW,UAAU,GAAG,EAAE,WAAW,SAAS,GAAG,EAAE,WAAW,UAAU,GAAG,EAAE,WAAW,YAAY,CAAC,EAAE,EAAE,GAAG,eAAe,OAAO,CAAC;AACnqI,IAAI,OAAO;AAAA,EACT;AACF;",
  "names": []
}
