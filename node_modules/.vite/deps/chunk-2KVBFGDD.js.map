{
  "version": 3,
  "sources": ["../../shikiji/dist/langs/rust.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"information_for_contributors\": [\"This file has been converted from https://github.com/dustypomerleau/rust-syntax/blob/master/syntaxes/rust.tmLanguage.json\", \"If you want to provide a fix or improvement, please create a pull request against the original repository.\", \"Once accepted there, we are happy to receive an update request.\"], \"version\": \"https://github.com/dustypomerleau/rust-syntax/commit/328a68299533bc2b8c71028be741cce78a9e0d53\", \"name\": \"rust\", \"scopeName\": \"source.rust\", \"patterns\": [{ \"comment\": \"boxed slice literal\", \"begin\": \"(<)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.brackets.angle.rust\" }, \"2\": { \"name\": \"punctuation.brackets.square.rust\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#types\" }] }, { \"comment\": \"macro type metavariables\", \"name\": \"meta.macro.metavariable.type.rust\", \"match\": \"(\\\\$)((crate)|([A-Z][A-Za-z0-9_]*))((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\", \"captures\": { \"1\": { \"name\": \"keyword.operator.macro.dollar.rust\" }, \"3\": { \"name\": \"keyword.other.crate.rust\" }, \"4\": { \"name\": \"entity.name.type.metavariable.rust\" }, \"6\": { \"name\": \"keyword.operator.key-value.rust\" }, \"7\": { \"name\": \"variable.other.metavariable.specifier.rust\" } }, \"patterns\": [{ \"include\": \"#keywords\" }] }, { \"comment\": \"macro metavariables\", \"name\": \"meta.macro.metavariable.rust\", \"match\": \"(\\\\$)([a-z][A-Za-z0-9_]*)((:)(block|expr|ident|item|lifetime|literal|meta|path?|stmt|tt|ty|vis))?\", \"captures\": { \"1\": { \"name\": \"keyword.operator.macro.dollar.rust\" }, \"2\": { \"name\": \"variable.other.metavariable.name.rust\" }, \"4\": { \"name\": \"keyword.operator.key-value.rust\" }, \"5\": { \"name\": \"variable.other.metavariable.specifier.rust\" } }, \"patterns\": [{ \"include\": \"#keywords\" }] }, { \"comment\": \"macro rules\", \"name\": \"meta.macro.rules.rust\", \"match\": \"\\\\b(macro_rules!)\\\\s+(([a-z0-9_]+)|([A-Z][a-z0-9_]*))\\\\s+(\\\\{)\", \"captures\": { \"1\": { \"name\": \"entity.name.function.macro.rules.rust\" }, \"3\": { \"name\": \"entity.name.function.macro.rust\" }, \"4\": { \"name\": \"entity.name.type.macro.rust\" }, \"5\": { \"name\": \"punctuation.brackets.curly.rust\" } } }, { \"comment\": \"attributes\", \"name\": \"meta.attribute.rust\", \"begin\": \"(#)(\\\\!?)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.attribute.rust\" }, \"2\": { \"name\": \"keyword.operator.attribute.inner.rust\" }, \"3\": { \"name\": \"punctuation.brackets.attribute.rust\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.attribute.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#types\" }] }, { \"comment\": \"modules\", \"match\": \"(mod)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[a-z][A-Za-z0-9_]*)\", \"captures\": { \"1\": { \"name\": \"storage.type.rust\" }, \"2\": { \"name\": \"entity.name.module.rust\" } } }, { \"comment\": \"external crate imports\", \"name\": \"meta.import.rust\", \"begin\": \"\\\\b(extern)\\\\s+(crate)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.rust\" }, \"2\": { \"name\": \"keyword.other.crate.rust\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.semi.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#punctuation\" }] }, { \"comment\": \"use statements\", \"name\": \"meta.use.rust\", \"begin\": \"\\\\b(use)\\\\s\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.rust\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.semi.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#types\" }, { \"include\": \"#lvariables\" }] }, { \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#types\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#variables\" }], \"repository\": { \"comments\": { \"patterns\": [{ \"comment\": \"documentation comments\", \"name\": \"comment.line.documentation.rust\", \"match\": \"^\\\\s*///.*\" }, { \"comment\": \"line comments\", \"name\": \"comment.line.double-slash.rust\", \"match\": \"\\\\s*//.*\" }] }, \"block-comments\": { \"patterns\": [{ \"comment\": \"empty block comments\", \"name\": \"comment.block.rust\", \"match\": \"/\\\\*\\\\*/\" }, { \"comment\": \"block documentation comments\", \"name\": \"comment.block.documentation.rust\", \"begin\": \"/\\\\*\\\\*\", \"end\": \"\\\\*/\", \"patterns\": [{ \"include\": \"#block-comments\" }] }, { \"comment\": \"block comments\", \"name\": \"comment.block.rust\", \"begin\": \"/\\\\*(?!\\\\*)\", \"end\": \"\\\\*/\", \"patterns\": [{ \"include\": \"#block-comments\" }] }] }, \"constants\": { \"patterns\": [{ \"comment\": \"ALL CAPS constants\", \"name\": \"constant.other.caps.rust\", \"match\": \"\\\\b[A-Z]{2}[A-Z0-9_]*\\\\b\" }, { \"comment\": \"constant declarations\", \"match\": \"\\\\b(const)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\", \"captures\": { \"1\": { \"name\": \"storage.type.rust\" }, \"2\": { \"name\": \"constant.other.caps.rust\" } } }, { \"comment\": \"decimal integers and floats\", \"name\": \"constant.numeric.decimal.rust\", \"match\": \"\\\\b\\\\d[\\\\d_]*(\\\\.?)[\\\\d_]*(?:(E|e)([+-]?)([\\\\d_]+))?(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"captures\": { \"1\": { \"name\": \"punctuation.separator.dot.decimal.rust\" }, \"2\": { \"name\": \"keyword.operator.exponent.rust\" }, \"3\": { \"name\": \"keyword.operator.exponent.sign.rust\" }, \"4\": { \"name\": \"constant.numeric.decimal.exponent.mantissa.rust\" }, \"5\": { \"name\": \"entity.name.type.numeric.rust\" } } }, { \"comment\": \"hexadecimal integers\", \"name\": \"constant.numeric.hex.rust\", \"match\": \"\\\\b0x[\\\\da-fA-F_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } } }, { \"comment\": \"octal integers\", \"name\": \"constant.numeric.oct.rust\", \"match\": \"\\\\b0o[0-7_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } } }, { \"comment\": \"binary integers\", \"name\": \"constant.numeric.bin.rust\", \"match\": \"\\\\b0b[01_]+(i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)?\\\\b\", \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } } }, { \"comment\": \"booleans\", \"name\": \"constant.language.bool.rust\", \"match\": \"\\\\b(true|false)\\\\b\" }] }, \"escapes\": { \"comment\": \"escapes: ASCII, byte, Unicode, quote, regex\", \"name\": \"constant.character.escape.rust\", \"match\": \"(\\\\\\\\)(?:(?:(x[0-7][0-7a-fA-F])|(u(\\\\{)[\\\\da-fA-F]{4,6}(\\\\}))|.))\", \"captures\": { \"1\": { \"name\": \"constant.character.escape.backslash.rust\" }, \"2\": { \"name\": \"constant.character.escape.bit.rust\" }, \"3\": { \"name\": \"constant.character.escape.unicode.rust\" }, \"4\": { \"name\": \"constant.character.escape.unicode.punctuation.rust\" }, \"5\": { \"name\": \"constant.character.escape.unicode.punctuation.rust\" } } }, \"functions\": { \"patterns\": [{ \"comment\": \"pub as a function\", \"match\": \"\\\\b(pub)(\\\\()\", \"captures\": { \"1\": { \"name\": \"keyword.other.rust\" }, \"2\": { \"name\": \"punctuation.brackets.round.rust\" } } }, { \"comment\": \"function definition\", \"name\": \"meta.function.definition.rust\", \"begin\": \"\\\\b(fn)\\\\s+((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)((\\\\()|(<))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.fn.rust\" }, \"2\": { \"name\": \"entity.name.function.rust\" }, \"4\": { \"name\": \"punctuation.brackets.round.rust\" }, \"5\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"end\": \"\\\\{|;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.curly.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }, { \"comment\": \"function/method calls, chaining\", \"name\": \"meta.function.call.rust\", \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.rust\" }, \"2\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }, { \"comment\": \"function/method calls with turbofish\", \"name\": \"meta.function.call.rust\", \"begin\": \"((?:r#(?!crate|[Ss]elf|super))?[A-Za-z0-9_]+)(?=::<.*>\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.rust\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.round.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#constants\" }, { \"include\": \"#gtypes\" }, { \"include\": \"#functions\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#macros\" }, { \"include\": \"#namespaces\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#strings\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }] }, \"keywords\": { \"patterns\": [{ \"comment\": \"control flow keywords\", \"name\": \"keyword.control.rust\", \"match\": \"\\\\b(await|break|continue|do|else|for|if|loop|match|return|try|while|yield)\\\\b\" }, { \"comment\": \"storage keywords\", \"name\": \"keyword.other.rust storage.type.rust\", \"match\": \"\\\\b(extern|let|macro|mod)\\\\b\" }, { \"comment\": \"const keyword\", \"name\": \"storage.modifier.rust\", \"match\": \"\\\\b(const)\\\\b\" }, { \"comment\": \"type keyword\", \"name\": \"keyword.declaration.type.rust storage.type.rust\", \"match\": \"\\\\b(type)\\\\b\" }, { \"comment\": \"enum keyword\", \"name\": \"keyword.declaration.enum.rust storage.type.rust\", \"match\": \"\\\\b(enum)\\\\b\" }, { \"comment\": \"trait keyword\", \"name\": \"keyword.declaration.trait.rust storage.type.rust\", \"match\": \"\\\\b(trait)\\\\b\" }, { \"comment\": \"struct keyword\", \"name\": \"keyword.declaration.struct.rust storage.type.rust\", \"match\": \"\\\\b(struct)\\\\b\" }, { \"comment\": \"storage modifiers\", \"name\": \"storage.modifier.rust\", \"match\": \"\\\\b(abstract|static)\\\\b\" }, { \"comment\": \"other keywords\", \"name\": \"keyword.other.rust\", \"match\": \"\\\\b(as|async|become|box|dyn|move|final|impl|in|override|priv|pub|ref|typeof|union|unsafe|unsized|use|virtual|where)\\\\b\" }, { \"comment\": \"fn\", \"name\": \"keyword.other.fn.rust\", \"match\": \"\\\\bfn\\\\b\" }, { \"comment\": \"crate\", \"name\": \"keyword.other.crate.rust\", \"match\": \"\\\\bcrate\\\\b\" }, { \"comment\": \"mut\", \"name\": \"storage.modifier.mut.rust\", \"match\": \"\\\\bmut\\\\b\" }, { \"comment\": \"logical operators\", \"name\": \"keyword.operator.logical.rust\", \"match\": \"(\\\\^|\\\\||\\\\|\\\\||&&|<<|>>|!)(?!=)\" }, { \"comment\": \"logical AND, borrow references\", \"name\": \"keyword.operator.borrow.and.rust\", \"match\": \"&(?![&=])\" }, { \"comment\": \"assignment operators\", \"name\": \"keyword.operator.assignment.rust\", \"match\": \"(\\\\+=|-=|\\\\*=|/=|%=|\\\\^=|&=|\\\\|=|<<=|>>=)\" }, { \"comment\": \"single equal\", \"name\": \"keyword.operator.assignment.equal.rust\", \"match\": \"(?<![<>])=(?!=|>)\" }, { \"comment\": \"comparison operators\", \"name\": \"keyword.operator.comparison.rust\", \"match\": \"(=(=)?(?!>)|!=|<=|(?<!=)>=)\" }, { \"comment\": \"math operators\", \"name\": \"keyword.operator.math.rust\", \"match\": \"(([+%]|(\\\\*(?!\\\\w)))(?!=))|(-(?!>))|(/(?!/))\" }, { \"comment\": \"less than, greater than (special case)\", \"match\": \"(?:\\\\b|(?:(\\\\))|(\\\\])|(\\\\})))[ \\\\t]+([<>])[ \\\\t]+(?:\\\\b|(?:(\\\\()|(\\\\[)|(\\\\{)))\", \"captures\": { \"1\": { \"name\": \"punctuation.brackets.round.rust\" }, \"2\": { \"name\": \"punctuation.brackets.square.rust\" }, \"3\": { \"name\": \"punctuation.brackets.curly.rust\" }, \"4\": { \"name\": \"keyword.operator.comparison.rust\" }, \"5\": { \"name\": \"punctuation.brackets.round.rust\" }, \"6\": { \"name\": \"punctuation.brackets.square.rust\" }, \"7\": { \"name\": \"punctuation.brackets.curly.rust\" } } }, { \"comment\": \"namespace operator\", \"name\": \"keyword.operator.namespace.rust\", \"match\": \"::\" }, { \"comment\": \"dereference asterisk\", \"match\": \"(\\\\*)(?=\\\\w+)\", \"captures\": { \"1\": { \"name\": \"keyword.operator.dereference.rust\" } } }, { \"comment\": \"subpattern binding\", \"name\": \"keyword.operator.subpattern.rust\", \"match\": \"@\" }, { \"comment\": \"dot access\", \"name\": \"keyword.operator.access.dot.rust\", \"match\": \"\\\\.(?!\\\\.)\" }, { \"comment\": \"ranges, range patterns\", \"name\": \"keyword.operator.range.rust\", \"match\": \"\\\\.{2}(=|\\\\.)?\" }, { \"comment\": \"colon\", \"name\": \"keyword.operator.key-value.rust\", \"match\": \":(?!:)\" }, { \"comment\": \"dashrocket, skinny arrow\", \"name\": \"keyword.operator.arrow.skinny.rust\", \"match\": \"->\" }, { \"comment\": \"hashrocket, fat arrow\", \"name\": \"keyword.operator.arrow.fat.rust\", \"match\": \"=>\" }, { \"comment\": \"dollar macros\", \"name\": \"keyword.operator.macro.dollar.rust\", \"match\": \"\\\\$\" }, { \"comment\": \"question mark operator, questionably sized, macro kleene matcher\", \"name\": \"keyword.operator.question.rust\", \"match\": \"\\\\?\" }] }, \"interpolations\": { \"comment\": \"curly brace interpolations\", \"name\": \"meta.interpolation.rust\", \"match\": '({)[^\"{}]*(})', \"captures\": { \"1\": { \"name\": \"punctuation.definition.interpolation.rust\" }, \"2\": { \"name\": \"punctuation.definition.interpolation.rust\" } } }, \"lifetimes\": { \"patterns\": [{ \"comment\": \"named lifetime parameters\", \"match\": \"(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.lifetime.rust\" }, \"2\": { \"name\": \"entity.name.type.lifetime.rust\" } } }, { \"comment\": \"borrowing references to named lifetimes\", \"match\": \"(\\\\&)(['])([a-zA-Z_][0-9a-zA-Z_]*)(?!['])\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.operator.borrow.rust\" }, \"2\": { \"name\": \"punctuation.definition.lifetime.rust\" }, \"3\": { \"name\": \"entity.name.type.lifetime.rust\" } } }] }, \"macros\": { \"patterns\": [{ \"comment\": \"macros\", \"name\": \"meta.macro.rust\", \"match\": \"(([a-z_][A-Za-z0-9_]*!)|([A-Z_][A-Za-z0-9_]*!))\", \"captures\": { \"2\": { \"name\": \"entity.name.function.macro.rust\" }, \"3\": { \"name\": \"entity.name.type.macro.rust\" } } }] }, \"namespaces\": { \"patterns\": [{ \"comment\": \"namespace (non-type, non-function path segment)\", \"match\": \"(?<![A-Za-z0-9_])([A-Za-z0-9_]+)((?<!super|self)::)\", \"captures\": { \"1\": { \"name\": \"entity.name.namespace.rust\" }, \"2\": { \"name\": \"keyword.operator.namespace.rust\" } } }] }, \"types\": { \"patterns\": [{ \"comment\": \"numeric types\", \"match\": \"(?<![A-Za-z])(f32|f64|i128|i16|i32|i64|i8|isize|u128|u16|u32|u64|u8|usize)\\\\b\", \"captures\": { \"1\": { \"name\": \"entity.name.type.numeric.rust\" } } }, { \"comment\": \"parameterized types\", \"begin\": \"\\\\b([A-Z][A-Za-z0-9]*)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.rust\" }, \"2\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.brackets.angle.rust\" } }, \"patterns\": [{ \"include\": \"#block-comments\" }, { \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#lvariables\" }, { \"include\": \"#lifetimes\" }, { \"include\": \"#punctuation\" }, { \"include\": \"#types\" }, { \"include\": \"#variables\" }] }, { \"comment\": \"primitive types\", \"name\": \"entity.name.type.primitive.rust\", \"match\": \"\\\\b(bool|char|str)\\\\b\" }, { \"comment\": \"trait declarations\", \"match\": \"\\\\b(trait)\\\\s+([A-Z][A-Za-z0-9]*)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.declaration.trait.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.trait.rust\" } } }, { \"comment\": \"struct declarations\", \"match\": \"\\\\b(struct)\\\\s+([A-Z][A-Za-z0-9]*)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.declaration.struct.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.struct.rust\" } } }, { \"comment\": \"enum declarations\", \"match\": \"\\\\b(enum)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.declaration.enum.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.enum.rust\" } } }, { \"comment\": \"type declarations\", \"match\": \"\\\\b(type)\\\\s+([A-Z][A-Za-z0-9_]*)\\\\b\", \"captures\": { \"1\": { \"name\": \"keyword.declaration.type.rust storage.type.rust\" }, \"2\": { \"name\": \"entity.name.type.declaration.rust\" } } }, { \"comment\": \"types\", \"name\": \"entity.name.type.rust\", \"match\": \"\\\\b[A-Z][A-Za-z0-9]*\\\\b(?!!)\" }] }, \"gtypes\": { \"patterns\": [{ \"comment\": \"option types\", \"name\": \"entity.name.type.option.rust\", \"match\": \"\\\\b(Some|None)\\\\b\" }, { \"comment\": \"result types\", \"name\": \"entity.name.type.result.rust\", \"match\": \"\\\\b(Ok|Err)\\\\b\" }] }, \"punctuation\": { \"patterns\": [{ \"comment\": \"comma\", \"name\": \"punctuation.comma.rust\", \"match\": \",\" }, { \"comment\": \"curly braces\", \"name\": \"punctuation.brackets.curly.rust\", \"match\": \"[{}]\" }, { \"comment\": \"parentheses, round brackets\", \"name\": \"punctuation.brackets.round.rust\", \"match\": \"[()]\" }, { \"comment\": \"semicolon\", \"name\": \"punctuation.semi.rust\", \"match\": \";\" }, { \"comment\": \"square brackets\", \"name\": \"punctuation.brackets.square.rust\", \"match\": \"[\\\\[\\\\]]\" }, { \"comment\": \"angle brackets\", \"name\": \"punctuation.brackets.angle.rust\", \"match\": \"(?<!=)[<>]\" }] }, \"strings\": { \"patterns\": [{ \"comment\": \"double-quoted strings and byte strings\", \"name\": \"string.quoted.double.rust\", \"begin\": '(b?)(\")', \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.byte.raw.rust\" }, \"2\": { \"name\": \"punctuation.definition.string.rust\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.rust\" } }, \"patterns\": [{ \"include\": \"#escapes\" }, { \"include\": \"#interpolations\" }] }, { \"comment\": \"double-quoted raw strings and raw byte strings\", \"name\": \"string.quoted.double.rust\", \"begin\": '(b?r)(#*)(\")', \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.byte.raw.rust\" }, \"2\": { \"name\": \"punctuation.definition.string.raw.rust\" }, \"3\": { \"name\": \"punctuation.definition.string.rust\" } }, \"end\": '(\")(\\\\2)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.rust\" }, \"2\": { \"name\": \"punctuation.definition.string.raw.rust\" } } }, { \"comment\": \"characters and bytes\", \"name\": \"string.quoted.single.char.rust\", \"begin\": \"(b)?(')\", \"beginCaptures\": { \"1\": { \"name\": \"string.quoted.byte.raw.rust\" }, \"2\": { \"name\": \"punctuation.definition.char.rust\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.char.rust\" } }, \"patterns\": [{ \"include\": \"#escapes\" }] }] }, \"lvariables\": { \"patterns\": [{ \"comment\": \"self\", \"name\": \"variable.language.self.rust\", \"match\": \"\\\\b[Ss]elf\\\\b\" }, { \"comment\": \"super\", \"name\": \"variable.language.super.rust\", \"match\": \"\\\\bsuper\\\\b\" }] }, \"variables\": { \"patterns\": [{ \"comment\": \"variables\", \"name\": \"variable.other.rust\", \"match\": \"\\\\b(?<!(?<!\\\\.)\\\\.)(?:r#(?!(crate|[Ss]elf|super)))?[a-z0-9_]+\\\\b\" }] } }, \"displayName\": \"Rust\", \"aliases\": [\"rs\"] });\nvar rust = [\n  lang\n];\n\nexport { rust as default };\n"],
  "mappings": "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",
  "names": []
}
